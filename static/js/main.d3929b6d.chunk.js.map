{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","react_default","a","createElement","className","alt","src","concat","monster","id","name","email","CardList","monsters","map","card_component_Card","key","SearchBox","_ref","placeholder","handleChange","type","onChange","App","_this","Object","classCallCheck","this","_super","call","e","setState","searchField","target","value","state","_this2","fetch","then","response","json","users","_this$state","filteredMonsters","filter","toLowerCase","includes","search_box_component_SearchBox","card_list_component_CardList","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App_0","document","getElementById"],"mappings":"2SAGaA,SAAO,SAACC,GAAD,OAChBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKE,IAAI,UAAUC,IAAG,wBAAAC,OAA0BP,EAAMQ,QAAQC,GAAxC,4BACtBR,EAAAC,EAAAC,cAAA,cAAOH,EAAMQ,QAAQE,MACrBT,EAAAC,EAAAC,cAAA,SAAIH,EAAMQ,QAAQG,UCFbC,SAAW,SAAAZ,GAAK,OACzBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACVJ,EAAMa,SAASC,IAAI,SAAAN,GAAO,OACvBP,EAAAC,EAAAC,cAACY,EAAD,CAAMC,IAAMR,EAAQC,GAAID,QAASA,SCJhCS,SAAY,SAAAC,GAAA,IAAIC,EAAJD,EAAIC,YAAaC,EAAjBF,EAAiBE,aAAjB,OACrBnB,EAAAC,EAAAC,cAAA,SACAC,UAAU,SACViB,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCqCCG,2DAvCb,SAAAA,IACA,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACEC,EAAAI,EAAAC,KAAAF,OAaFP,aAAe,SAAAU,GACbN,EAAKO,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbtCV,EAAKW,MAAQ,CACXtB,SAAU,GACVmB,YAAa,IAJjBR,uDAQA,WAAoB,IAAAY,EAAAT,KAClBU,MAAM,8CACLC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAAK,OAAIL,EAAKL,SAAU,CAAClB,SAAW4B,4BAQ5C,WAEE,IAAAC,EAAiCf,KAAKQ,MAA9BtB,EAAR6B,EAAQ7B,SAAUmB,EAAlBU,EAAkBV,YACZW,EAAmB9B,EAAS+B,OAAO,SAAApC,GAAO,OAAIA,EAAQE,KAAKmC,cAAcC,SAASd,EAAYa,iBAEpG,OACE5C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAC4C,EAAD,CACE5B,YAAY,kBACZC,aAAgBO,KAAKP,eAEvBnB,EAAAC,EAAAC,cAAC6C,EAAD,CAAUnC,SAAW8B,YAlCXM,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAvB,EAAA,GAAAQ,KAAAe,EAAAC,KAAA,UAAqBhB,KAAK,SAAApB,GAAiD,IAA9CqC,EAA8CrC,EAA9CqC,OAAQC,EAAsCtC,EAAtCsC,OAAQC,EAA8BvC,EAA9BuC,OAAQC,EAAsBxC,EAAtBwC,OAAQC,EAAczC,EAAdyC,QAC3DJ,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,MCDdS,IAASC,OACP5D,EAAAC,EAAAC,cAACF,EAAAC,EAAM4D,WAAP,KACE7D,EAAAC,EAAAC,cAAC4D,EAAD,OAEFC,SAASC,eAAe,SAM1Bf","file":"static/js/main.d3929b6d.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props) => (\r\n    <div className='card-container'>\r\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n        <h2 > {props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n\r\n\r\n)","import React from 'react';\r\nimport { Card } from '../card/card.component';\r\n\r\nimport './card-list.style.css';\r\n\r\nexport const CardList = props =>(\r\n    <div className='card-list'> \r\n        {props.monsters.map(monster => (\r\n            <Card key ={monster.id} monster={monster} />\r\n        ))}\r\n    </div>\r\n);","import React from 'react';\r\n\r\nimport './search-box.style.css';\r\n\r\nexport const SearchBox = ( { placeholder, handleChange }) => (\r\n    <input\r\n    className='search' \r\n    type='search' \r\n    placeholder={placeholder} \r\n    onChange={handleChange} \r\n  />\r\n);","import React, {Component} from 'react';\nimport {CardList} from './components/card-list/card-list.component';\nimport {SearchBox} from './components/search-box/search-box.component.jsx'\nimport './App.css';\n\nclass App extends Component {\n\n  constructor()\n  {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState( {monsters : users}));\n  }\n\n  handleChange = e =>{\n    this.setState({ searchField: e.target.value })\n    \n  };\n  \n  render() {\n\n    const { monsters, searchField} = this.state;\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()) )\n\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox\n          placeholder='search monsters'\n          handleChange = {this.handleChange}\n        />\n        <CardList monsters ={filteredMonsters} />\n      </div>\n    );\n    \n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}